{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",

  "Resources": {

    "HelloLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/chtompki-serverless-example-api-dev-hello"
      }
    },

    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
              "Effect": "Allow",
              "Principal": {"Service": ["lambda.amazonaws.com"]},
              "Action": ["sts:AssumeRole"]
          }]
        },
        "Policies": [{
            "PolicyName": {"Fn::Join": ["-", [
                  "chtompki-serverless-example-api",
                  "dev",
                  "lambda"
                ]
            ]},
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [{"Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chtompki-serverless-example-api-dev*:*"}]
                },
                {
                  "Effect": "Allow",
                  "Action": ["logs:PutLogEvents"],
                  "Resource": [{"Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/chtompki-serverless-example-api-dev*:*:*"}
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {"Fn::Join": ["-",["chtompki-serverless-example-api", "dev", {"Ref": "AWS::Region"}, "lambdaRole"]]}
      }
    },

    "HelloLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "chtompki-serverless-deployments",
          "S3Key": "serverless/chtompki-serverless-example-api/dev/1623678746358-2021-06-14T13:52:26.358Z/chtompki-serverless-example-api.zip"
        },
        "Handler": "lambda_function.lambda_handler",
        "Runtime": "python3.8",
        "FunctionName": "chtompki-serverless-example-api-dev-hello",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {"Fn::GetAtt": ["IamRoleLambdaExecution", "Arn"]}
      },
      "DependsOn": ["HelloLogGroup"]
    },
    "HelloLambdaVersion5b2WAH4VoggmKsHAVWlXynVUaDWsNytkukhTLw9RkAw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {"Ref": "HelloLambdaFunction"},
        "CodeSha256": "NpaTOFFZvKkzlv7VOeUp0gWhQ0EIl5z5V9XI8o7Eejs="
      }
    },

    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-chtompki-serverless-example-api",
        "EndpointConfiguration": {
          "Types": ["EDGE"]
        },
        "Policy": ""
      }
    },

    "ApiGatewayMethodPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {"Ref": "ApiGatewayRestApi"},
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {"Fn::Join": [
              "", [
                "arn:",
                {"Ref": "AWS::Partition"},
                ":apigateway:",
                {"Ref": "AWS::Region"},
                ":lambda:path/2015-03-31/functions/",
                {"Fn::GetAtt": ["HelloLambdaFunction","Arn"]},
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },

    "ApiGatewayDeployment1623678743691": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {"Ref": "ApiGatewayRestApi"},
        "StageName": "dev"
      },
      "DependsOn": ["ApiGatewayMethodPost"]
    },

    "HelloLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {"Fn::GetAtt": ["HelloLambdaFunction", "Arn"]},
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Join": ["", [
          "arn:",
          {"Ref": "AWS::Partition"},
          ":execute-api:",
          {"Ref": "AWS::Region"},
          ":",
          {"Ref": "AWS::AccountId"},
          ":",
          {"Ref": "ApiGatewayRestApi"},
          "/*/*"]
        ]}
      }
    }
  },

  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "chtompki-serverless-deployments"
    },
    "HelloLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "HelloLambdaVersion5b2WAH4VoggmKsHAVWlXynVUaDWsNytkukhTLw9RkAw"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {"Fn::Join": ["", [
          "https://",
          {"Ref": "ApiGatewayRestApi"},
          ".execute-api.",
          {"Ref": "AWS::Region"},
          ".",
          {"Ref": "AWS::URLSuffix"},
          "/dev"
        ]
      ]}
    }
  }
}